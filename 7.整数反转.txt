给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例?1:

输入: 123
输出: 321
?示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为?[?231,? 231?? 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

方法一：
利用整数求余数
代码：PHP
/**
     * @param Integer $x
     * @return Integer
     */
    function reverse($x) {
        // if($x>=PHP_INT_MAX || $x<=PHP_INT_MIN){
        //     return 0;
        // }
        
        
        $num = $x >=0 ? $x:-$x;
        $n = 0;
        //判断多少位
        while($num>=1)
        {
            $num = $num/10;
            $n++;
        }
        $num = 0;
        $num2 = $x >=0 ? $x:-$x;
        for($i=0;$i<$n;$i++){
            $num += $num2/pow(10,$i)%10*pow(10,$n-$i-1);
        }
        if($num>=pow(2,31)-1 || $num<=-pow(2,31)){
            return 0;
        }
        
        return $x >=0 ? $num : -$num;
    }

方法二：
利用字符串反转函数
/**
     * @param Integer $x
     * @return Integer
     */
    function reverse($x) {
        $num = $x>=0?$x:-$x;
        $num = strrev($num);
        $num = intval($num);
        if($num > pow(2,31)-1 || $num < -pow(2,31)){
            return 0;
        }
        return $x>=0?$num:-$num;
    }

综合：方法一在时间和内存上稍占优势，方法二简单代码少